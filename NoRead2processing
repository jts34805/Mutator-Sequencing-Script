for file in "Raw_Data/"*_R1_*.gz
do
	file2="${file:9:-16}"

	### Remove TIR region and add validation sequence to read header ###
	fastp -i $file -o Mapped_Data/read1a.fq.gz -f 23 -A -G -Q -L
	fastp -i Mapped_Data/read1a.fq.gz -I "Raw_Data/""$file2""_R2_001.fastq.gz" -o Mapped_Data/read1b.fq.gz -O Mapped_Data/read2b.fq.gz -U --umi_loc read1 --umi_len 6 --umi_prefix TIR -h "Mapped_Data/fastp/""$file2"".html" -A -G -Q -L
	
	### Process UMIs, trim and filter reads ###
	fastp -i Mapped_Data/read1b.fq.gz -I Mapped_Data/read2b.fq.gz -o Mapped_Data/read1.fq.gz -O Mapped_Data/read2.fq.gz -U --umi_loc read2 --umi_len 8 --umi_skip 11 --umi_prefix UMI --length_required 40 --trim_poly_x --cut_tail --adapter_fasta adapter.fa
	rm fastp.html fastp.json Mapped_Data/read1a.fq.gz Mapped_Data/read1b.fq.gz Mapped_Data/read2b.fq.gz
	### Map to genome ###
	bowtie2 -x /home/brad/Documents/Research/Sequencing/Genomes/W22v2 --phred33 -X 1000 --no-mixed --no-discordant -1 Mapped_Data/read1.fq.gz -2 Mapped_Data/read2.fq.gz | samtools view -bS > "Mapped_Data/bowtie2_out/""$file2"".bam"
	
	### Deduplicate reads using UMIs ###
	samtools sort "Mapped_Data/bowtie2_out/""$file2"".bam" -o "Mapped_Data/bowtie2_out/""$file2"".bam"
	samtools index "Mapped_Data/bowtie2_out/""$file2"".bam"
	umi_tools group -I "Mapped_Data/bowtie2_out/""$file2"".bam" --paired --chimeric-pairs discard --unpaired-reads discard --output-bam -S "Mapped_Data/dedup/""$file2"".bam"
	rm "Mapped_Data/bowtie2_out/""$file2"".bam" "Mapped_Data/bowtie2_out/""$file2"".bam.bai"
	### Prepare bam files for R ###
	samtools view -f 64 -F 4 "Mapped_Data/dedup/""$file2"".bam" | awk -F" " '{sub(/.*TIR_/,"",$1); sub(/BX:Z:/,"",$(NF)); print $3, $4, $9, $1, $(NF), $5, length($10), $10, $8}' | awk '{sub(/:UMI_.*/,"",$4); print $1, $2, $9, $3, $4, $5, $6, $7, $8}' > "Mapped_Data/tables/""$file2""_out.txt"

done
